// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ValorantAPIApp.Data;

#nullable disable

namespace ValorantAPIApp.Migrations
{
    [DbContext(typeof(ValorantDbContext))]
    [Migration("20221002165251_Added Relation Team And Agents, Added Team Size")]
    partial class AddedRelationTeamAndAgentsAddedTeamSize
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("AgentTeam", b =>
                {
                    b.Property<string>("AgentsUuid")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("TeamsId")
                        .HasColumnType("int");

                    b.HasKey("AgentsUuid", "TeamsId");

                    b.HasIndex("TeamsId");

                    b.ToTable("AgentTeam");
                });

            modelBuilder.Entity("PlayerWeaponSkin", b =>
                {
                    b.Property<string>("EquippedWeaponSkinsUuid")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("PlayersId")
                        .HasColumnType("int");

                    b.HasKey("EquippedWeaponSkinsUuid", "PlayersId");

                    b.HasIndex("PlayersId");

                    b.ToTable("PlayerWeaponSkin");
                });

            modelBuilder.Entity("ValorantAPIApp.Models.Agent", b =>
                {
                    b.Property<string>("Uuid")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("Price")
                        .HasColumnType("int");

                    b.HasKey("Uuid");

                    b.ToTable("Agents");
                });

            modelBuilder.Entity("ValorantAPIApp.Models.AgentLoadout", b =>
                {
                    b.Property<int>("PlayerId")
                        .HasColumnType("int");

                    b.Property<string>("AgentUuid")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("WeaponUuid")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("PlayerId", "AgentUuid");

                    b.HasIndex("AgentUuid");

                    b.HasIndex("WeaponUuid");

                    b.ToTable("AgentLoadouts");
                });

            modelBuilder.Entity("ValorantAPIApp.Models.Mission", b =>
                {
                    b.Property<string>("Uuid")
                        .HasColumnType("nvarchar(450)");

                    b.Property<double>("DurationInMin")
                        .HasColumnType("float");

                    b.Property<double>("Reward")
                        .HasColumnType("float");

                    b.HasKey("Uuid");

                    b.ToTable("Missions");
                });

            modelBuilder.Entity("ValorantAPIApp.Models.Player", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("Currency")
                        .HasColumnType("int");

                    b.Property<string>("DisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("MaxTeams")
                        .HasColumnType("int");

                    b.Property<byte[]>("PasswordHash")
                        .HasColumnType("varbinary(max)");

                    b.Property<byte[]>("PasswordSalt")
                        .HasColumnType("varbinary(max)");

                    b.Property<string>("Username")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Players");
                });

            modelBuilder.Entity("ValorantAPIApp.Models.PlayerWeapon", b =>
                {
                    b.Property<int>("PlayerId")
                        .HasColumnType("int");

                    b.Property<string>("WeaponUuid")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("WeaponSkinUuid")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("PlayerId", "WeaponUuid");

                    b.HasIndex("WeaponSkinUuid");

                    b.HasIndex("WeaponUuid");

                    b.ToTable("PlayerWeapons");
                });

            modelBuilder.Entity("ValorantAPIApp.Models.Team", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("MissionUuid")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PlayerId")
                        .HasColumnType("int");

                    b.Property<int>("maxTeamSize")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("MissionUuid");

                    b.HasIndex("PlayerId");

                    b.ToTable("Teams");
                });

            modelBuilder.Entity("ValorantAPIApp.Models.Weapon", b =>
                {
                    b.Property<string>("Uuid")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("Price")
                        .HasColumnType("int");

                    b.HasKey("Uuid");

                    b.ToTable("Weapons");
                });

            modelBuilder.Entity("ValorantAPIApp.Models.WeaponSkin", b =>
                {
                    b.Property<string>("Uuid")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("Price")
                        .HasColumnType("int");

                    b.HasKey("Uuid");

                    b.ToTable("WeaponSkins");
                });

            modelBuilder.Entity("AgentTeam", b =>
                {
                    b.HasOne("ValorantAPIApp.Models.Agent", null)
                        .WithMany()
                        .HasForeignKey("AgentsUuid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ValorantAPIApp.Models.Team", null)
                        .WithMany()
                        .HasForeignKey("TeamsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("PlayerWeaponSkin", b =>
                {
                    b.HasOne("ValorantAPIApp.Models.WeaponSkin", null)
                        .WithMany()
                        .HasForeignKey("EquippedWeaponSkinsUuid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ValorantAPIApp.Models.Player", null)
                        .WithMany()
                        .HasForeignKey("PlayersId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("ValorantAPIApp.Models.AgentLoadout", b =>
                {
                    b.HasOne("ValorantAPIApp.Models.Agent", "Agent")
                        .WithMany("Loadouts")
                        .HasForeignKey("AgentUuid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ValorantAPIApp.Models.Player", "Player")
                        .WithMany("EquippedAgentsLoadouts")
                        .HasForeignKey("PlayerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ValorantAPIApp.Models.Weapon", "Weapon")
                        .WithMany("AgentLoadouts")
                        .HasForeignKey("WeaponUuid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Agent");

                    b.Navigation("Player");

                    b.Navigation("Weapon");
                });

            modelBuilder.Entity("ValorantAPIApp.Models.PlayerWeapon", b =>
                {
                    b.HasOne("ValorantAPIApp.Models.Player", "Player")
                        .WithMany("EquippedWeapons")
                        .HasForeignKey("PlayerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ValorantAPIApp.Models.WeaponSkin", "WeaponSkin")
                        .WithMany()
                        .HasForeignKey("WeaponSkinUuid");

                    b.HasOne("ValorantAPIApp.Models.Weapon", "Weapon")
                        .WithMany("PlayerWeapons")
                        .HasForeignKey("WeaponUuid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Player");

                    b.Navigation("Weapon");

                    b.Navigation("WeaponSkin");
                });

            modelBuilder.Entity("ValorantAPIApp.Models.Team", b =>
                {
                    b.HasOne("ValorantAPIApp.Models.Mission", "Mission")
                        .WithMany("TeamsAssignedIn")
                        .HasForeignKey("MissionUuid");

                    b.HasOne("ValorantAPIApp.Models.Player", "Player")
                        .WithMany("TeamsOwned")
                        .HasForeignKey("PlayerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Mission");

                    b.Navigation("Player");
                });

            modelBuilder.Entity("ValorantAPIApp.Models.Agent", b =>
                {
                    b.Navigation("Loadouts");
                });

            modelBuilder.Entity("ValorantAPIApp.Models.Mission", b =>
                {
                    b.Navigation("TeamsAssignedIn");
                });

            modelBuilder.Entity("ValorantAPIApp.Models.Player", b =>
                {
                    b.Navigation("EquippedAgentsLoadouts");

                    b.Navigation("EquippedWeapons");

                    b.Navigation("TeamsOwned");
                });

            modelBuilder.Entity("ValorantAPIApp.Models.Weapon", b =>
                {
                    b.Navigation("AgentLoadouts");

                    b.Navigation("PlayerWeapons");
                });
#pragma warning restore 612, 618
        }
    }
}
